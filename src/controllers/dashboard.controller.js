const axios = require('axios');
const fs = require('fs');
const path = require('path');
const cheerio = require('cheerio');
const { v4 } = require('uuid');
const magaluModel = require('../models/Magalu.model');
const { data } = require('cheerio/lib/api/attributes');

exports.addProductMagalu = async (req, res, next) => {
    try {
        const { url, amount, interest, from, to } = req.body;

        var data = {};

        if (typeof url !== 'undefined' && typeof amount !== 'undefined' && typeof interest !== 'undefined' && typeof from !== 'undefined' && typeof to !== 'undefined') {

            const productmagalu = await axios.get(url, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36',
                },
            });
    
            if (productmagalu) {
                var page =  productmagalu.data;
                const $ = cheerio.load(page);

                const id = v4();
                
                $('.price-template__from').text('de R$ <%= from %>,00');
                $('.price-template__text').text('<%= to %>,00');

                var title = $('.header-product__title').text();
                
                var interestClass = $('.price-template').html();
                var last = interestClass.split('</div>');
                
                $('.price-template').html(interestClass.replace(last[last.length - 1], ' em <%= amount %>x de R$ <%= interest %>,00 sem juros'));

                var html = $.html();

                html.replace('&alt;%= amount %&gt;', '<%= amount %>');
                html.replace('&alt;%= interest %&gt;', '<%= interest %>');
                html.replace('&alt;%= from %&gt;', '<%= from %>');
                html.replace('&alt;%= to %&gt;', '<%= to %>');

                fs.writeFileSync(`${__dirname}/../views/fakes/magalu/${id}.ejs`, html);

                data = await magaluModel.create({
                    id_user: req.session.user.id,
                    page: id,
                    title: title,
                    to: to,
                    from: from,
                    amount: amount,
                    interest: interest,
                });

                if (data) {
                    req.flash('notify', {
                        type: 'success',
                        message: 'Página clonada com sucesso!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'success',
                    message: 'Não foi possível clonar a página!',
                });
            }
        }

        return res.render('layouts/main', {
            page: 'addproductmagalu',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
};

exports.deleteProductMagalu = async (req, res, next) => {
    try {
        const { id } = req.params;

        if (typeof id !== 'undefined') {
            const data = await magaluModel.findOne({
                where: {
                    id: id,
                    id_user: req.session.user.id,
                },
            });

            if (data) {
                const result = await magaluModel.destroy({
                    where: {
                        id: id,
                    },
                });
        
                if (result) {
                    req.flash('notify', {
                        type: 'success',
                        message: 'Produto deletado com sucesso!',
                    });
                } else {
                    req.flash('notify', {
                        type: 'error',
                        message: 'Não foi possível deletar o item!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'error',
                    message: 'Não foi possível deletar o item!',
                });
            }

        } else {
            req.flash('notify', {
                type: 'error',
                message: 'Requisição inválida!',
            });
        }

        return res.redirect('list-products-magalu');
    } catch (err) {
        return res.render('errors/500');
    }
}

exports.listProductsMagalu = async (req, res, next) => {
    try {
        const data = await magaluModel.findAll({
            where: {
                id_user: req.session.user.id,
            },
        });
        
        return res.render('layouts/main', {
            page: 'listproductsmagalu',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
}