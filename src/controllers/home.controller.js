const bcrypt = require('bcryptjs');
const userModel = require('../models/Users.model');
const magaluModel = require('../models/Magalu.model');
const magaluUsersModel = require('../models/MagaluUsers.model');
const magaluInfoModel = require('../models/MagaluInfo.model');

exports.index = async (req, res, next) => {
    try {
        console.log(req.session.user);
        return res.render('layouts/main', {
            page: 'home',
        });
    } catch (err) {
        return res.render('errors/500');
    }
};

exports.register = async (req, res, next) => {
    try {
        const { username, password } = req.body;
        var data = {};

        if (typeof username !== 'undefined' && typeof password !== 'undefined') {
            const password_hash = await bcrypt.hash(password, await bcrypt.genSalt(10));
            if (username.match(/^([a-zA-Z0-9_-]+)$/)) {
                data = await userModel.create({
                    username: username,
                    password: password_hash,
                    access: 1,
                });
                if (data) {
                    req.flash('notify', {
                        type: 'success',
                        message: 'Cadastro efetuado com sucesso!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'error',
                    message: 'Usuário inválido!',
                });
            }
        }

        return res.render('layouts/initial', {
            page: 'register',
            data: data,
        });
    } catch (err) {
        return res.render('errors/500');
    }
};

exports.login = async (req, res, next) => {
    try {
        const { username, password } = req.body;
        var data = {};

        if (typeof username !== 'undefined' && typeof password !== 'undefined') {
            if (username.match(/^([a-zA-Z0-9_-]+)$/)) {
                data = await userModel.findOne({
                    where: {
                        username: username,
                    },
                });
                
                if (data) {
                    if ((await bcrypt.compare(password, data.password))) {

                        req.flash('notify', {
                            type: 'success',
                            message: 'Login efetuado com sucesso!',
                        });
    
                        req.session.user = data;
    
                        return res.redirect('/');
                    } else {
                        req.flash('notify', {
                            type: 'error',
                            message: 'Não foi possível entrar no painel!',
                        });
                    }
                } else {
                    req.flash('notify', {
                        type: 'error',
                        message: 'Não foi possível entrar no painel!',
                    });
                }
            } else {
                req.flash('notify', {
                    type: 'error',
                    message: 'Usuário inválido!',
                });
            }
        }

        return res.render('layouts/initial', {
            page: 'login',
            data: data,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/500');
    }
};

exports.logout = async (req, res, next) => {
    try {
        req.flash('notify', {
            type: 'success',
            message: 'Deslogado com sucesso!',
        });
        delete req.session.user;
        res.redirect('/login');
    } catch (err) {
        return res.render('errors/500');
    }
};